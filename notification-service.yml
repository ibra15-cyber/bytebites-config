server:
  port: 8084

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        acknowledge-mode: auto # Auto-acknowledgment for simplicity
    # stream: # Remove stream config if not using RabbitMQ Streams
    #   virtual-host: /

  mail:
    host: smtp.gmail.com
    port: 465 # Changed to 587 for STARTTLS
    username: 152512sch@gmail.com
    password: iaberrorlmilljsr
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true # Enable STARTTLS for port 587
          # Removed specific socketFactory and ssl.enable for port 465, as 587 with STARTTLS is standard
          # timeout: 5000 # Optional: connection/read timeouts
          # writetimeout: 5000
          # connectiontimeout: 5000
          # retry: # These are mail client-side retry properties, not RabbitMQ
          #   enable: true
          # maxretries: 3
          # initialretrydelay: 1000
          # retryinterval: 2000

#          properties:
#            mail:
#              smtp:
#                timeout: 5000
#                writetimeout: 5000
#                connectiontimeout: 5000
#                retry:
#                  enable: true
#                maxretries: 3
#                initialretrydelay: 1000
#                retryinterval: 2000


app:
  email:
    company-name: ByteBites

  rabbitmq:
    # This queue name must match the queue bound in order-service's RabbitMQConfig
    notification-queue-name: notification.order.queue

resilience4j:
  circuitbreaker:
    instances:
      restaurant-service:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
  retry:
    instances:
      restaurant-service:
        max-attempts: 3
        wait-duration: 2s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

  endpoint:
    health:
      show-details: always

  health:
    circuitbreakers:
      enabled: true

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

logging:
  level:
    com.ibra.notificationservice: DEBUG # Changed to notification service package
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    feign: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
